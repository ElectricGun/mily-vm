# function: test_3
jump test_3_end always
test_3_start:
  op add l_test_return x y
  op add test_3_returns l_test_return z
  set @counter test_3_callback
test_3_end:
# call: test_3
set x 3
set y 3
set z 3
op add test_3_callback @counter 1
jump test_3_start always
set test_3_returns_0 test_3_returns
# call: test_3
set x 1
set y 2
set z 3
op add test_3_callback @counter 1
jump test_3_start always
set test_3_returns_1 test_3_returns
op add sus test_3_returns_0 test_3_returns_1
stop